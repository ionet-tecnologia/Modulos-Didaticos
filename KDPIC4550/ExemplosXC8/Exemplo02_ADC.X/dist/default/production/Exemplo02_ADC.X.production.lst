

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 09 14:56:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _LATEbits	set	3981
    48  0000                     _TRISEbits	set	3990
    49  0000                     _ADRESL	set	4035
    50  0000                     _ADRESH	set	4036
    51  0000                     _ADCON0bits	set	4034
    52  0000                     _ADCON0	set	4034
    53  0000                     _ADCON2	set	4032
    54  0000                     _CMCON	set	4020
    55  0000                     _ADCON1	set	4033
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  007F80                     __pcinit:
    61                           	opt callstack 0
    62  007F80                     start_initialization:
    63                           	opt callstack 0
    64  007F80                     __initialization:
    65                           	opt callstack 0
    66  007F80                     end_of_initialization:
    67                           	opt callstack 0
    68  007F80                     __end_of__initialization:
    69                           	opt callstack 0
    70  007F80  0100               	movlb	0
    71  007F82  EFE6  F03F         	goto	_main	;jump to C main() function
    72                           
    73                           	psect	cstackCOMRAM
    74  000001                     __pcstackCOMRAM:
    75                           	opt callstack 0
    76  000001                     ?_adc_read:
    77                           	opt callstack 0
    78                           
    79                           ; 2 bytes @ 0x0
    80  000001                     	ds	2
    81  000003                     ??_adc_read:
    82                           
    83                           ; 1 bytes @ 0x2
    84  000003                     	ds	2
    85  000005                     adc_read@canal:
    86                           	opt callstack 0
    87                           
    88                           ; 1 bytes @ 0x4
    89  000005                     	ds	1
    90  000006                     adc_read@x:
    91                           	opt callstack 0
    92                           
    93                           ; 1 bytes @ 0x5
    94  000006                     	ds	1
    95  000007                     adc_read@y:
    96                           	opt callstack 0
    97                           
    98                           ; 1 bytes @ 0x6
    99  000007                     	ds	1
   100  000008                     main@valor:
   101                           	opt callstack 0
   102                           
   103                           ; 2 bytes @ 0x7
   104  000008                     	ds	2
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 47 in file "main.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  valor           2    7[COMRAM] int 
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, cstack
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   125 ;;      Params:         0       0       0       0       0       0       0       0       0
   126 ;;      Locals:         2       0       0       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0
   128 ;;      Totals:         2       0       0       0       0       0       0       0       0
   129 ;;Total ram usage:        2 bytes
   130 ;; Hardware stack levels required when called:    1
   131 ;; This function calls:
   132 ;;		_adc_init
   133 ;;		_adc_read
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140  007FCC                     __ptext0:
   141                           	opt callstack 0
   142  007FCC                     _main:
   143                           	opt callstack 30
   144                           
   145                           ;main.c: 48:     int valor;;main.c: 50:     ADCON1 = 0x0F;
   146                           
   147                           ;incstack = 0
   148  007FCC  0E0F               	movlw	15
   149  007FCE  6EC1               	movwf	4033,c	;volatile
   150                           
   151                           ;main.c: 51:     CMCON = 0x07;
   152  007FD0  0E07               	movlw	7
   153  007FD2  6EB4               	movwf	4020,c	;volatile
   154                           
   155                           ;main.c: 52:     TRISEbits.TRISE2=0;
   156  007FD4  9496               	bcf	3990,2,c	;volatile
   157                           
   158                           ;main.c: 53:     adc_init();
   159  007FD6  ECC3  F03F         	call	_adc_init	;wreg free
   160  007FDA                     l759:
   161                           
   162                           ;main.c: 56:         valor = adc_read(0);
   163  007FDA  0E00               	movlw	0
   164  007FDC  ECCC  F03F         	call	_adc_read
   165  007FE0  C001  F008         	movff	?_adc_read,main@valor
   166  007FE4  C002  F009         	movff	?_adc_read+1,main@valor+1
   167                           
   168                           ;main.c: 57:         if (valor > 500)
   169  007FE8  BE09               	btfsc	main@valor+1,7,c
   170  007FEA  D008               	goto	l41
   171  007FEC  0EF5               	movlw	245
   172  007FEE  5C08               	subwf	main@valor,w,c
   173  007FF0  0E01               	movlw	1
   174  007FF2  5809               	subwfb	main@valor+1,w,c
   175  007FF4  A0D8               	btfss	status,0,c
   176  007FF6  D002               	goto	l41
   177                           
   178                           ;main.c: 58:             LATEbits.LATE2 = 1;
   179  007FF8  848D               	bsf	3981,2,c	;volatile
   180  007FFA  D7EF               	goto	l759
   181  007FFC                     l41:
   182                           
   183                           ;main.c: 60:             LATEbits.LATE2 = 0;
   184  007FFC  948D               	bcf	3981,2,c	;volatile
   185  007FFE  D7ED               	goto	l759
   186  008000                     __end_of_main:
   187                           	opt callstack 0
   188                           
   189 ;; *************** function _adc_read *****************
   190 ;; Defined at:
   191 ;;		line 29 in file "adc.c"
   192 ;; Parameters:    Size  Location     Type
   193 ;;  canal           1    wreg     unsigned char 
   194 ;; Auto vars:     Size  Location     Type
   195 ;;  canal           1    4[COMRAM] unsigned char 
   196 ;;  y               1    6[COMRAM] unsigned char 
   197 ;;  x               1    5[COMRAM] unsigned char 
   198 ;; Return value:  Size  Location     Type
   199 ;;                  2    0[COMRAM] unsigned int 
   200 ;; Registers used:
   201 ;;		wreg, status,2, status,0
   202 ;; Tracked objects:
   203 ;;		On entry : 0/0
   204 ;;		On exit  : 0/0
   205 ;;		Unchanged: 0/0
   206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   207 ;;      Params:         2       0       0       0       0       0       0       0       0
   208 ;;      Locals:         3       0       0       0       0       0       0       0       0
   209 ;;      Temps:          2       0       0       0       0       0       0       0       0
   210 ;;      Totals:         7       0       0       0       0       0       0       0       0
   211 ;;Total ram usage:        7 bytes
   212 ;; Hardware stack levels used:    1
   213 ;; This function calls:
   214 ;;		Nothing
   215 ;; This function is called by:
   216 ;;		_main
   217 ;; This function uses a non-reentrant model
   218 ;;
   219                           
   220                           	psect	text1
   221  007F98                     __ptext1:
   222                           	opt callstack 0
   223  007F98                     _adc_read:
   224                           	opt callstack 30
   225                           
   226                           ;incstack = 0
   227                           ;adc_read@canal stored from wreg
   228  007F98  6E05               	movwf	adc_read@canal,c
   229                           
   230                           ;adc.c: 30:     unsigned char x, y;;adc.c: 31:     ADCON0 = (canal << 2) | 0x01;
   231  007F9A  4405               	rlncf	adc_read@canal,w,c
   232  007F9C  46E8               	rlncf	wreg,f,c
   233  007F9E  0BFC               	andlw	252
   234  007FA0  0901               	iorlw	1
   235  007FA2  6EC2               	movwf	4034,c	;volatile
   236                           
   237                           ;adc.c: 32:     ADCON0bits.GO_DONE = 1;
   238  007FA4  82C2               	bsf	4034,1,c	;volatile
   239  007FA6                     l20:
   240  007FA6  B2C2               	btfsc	4034,1,c	;volatile
   241  007FA8  D7FE               	goto	l20
   242                           
   243                           ;adc.c: 34:     x = ADRESH & 0x03;
   244  007FAA  50C4               	movf	4036,w,c	;volatile
   245  007FAC  0B03               	andlw	3
   246  007FAE  6E06               	movwf	adc_read@x,c
   247                           
   248                           ;adc.c: 35:     y = ADRESL;
   249  007FB0  CFC3 F007          	movff	4035,adc_read@y	;volatile
   250                           
   251                           ;adc.c: 36:     return (unsigned int) (x << 8 | y);
   252  007FB4  5007               	movf	adc_read@y,w,c
   253  007FB6  C006  F003         	movff	adc_read@x,??_adc_read
   254  007FBA  6A04               	clrf	(??_adc_read+1)& (0+255),c
   255  007FBC  C003  F004         	movff	??_adc_read,??_adc_read+1
   256  007FC0  6A03               	clrf	??_adc_read,c
   257  007FC2  1003               	iorwf	??_adc_read,w,c
   258  007FC4  6E01               	movwf	?_adc_read,c
   259  007FC6  5004               	movf	??_adc_read+1,w,c
   260  007FC8  6E02               	movwf	?_adc_read+1,c
   261  007FCA  0012               	return		;funcret
   262  007FCC                     __end_of_adc_read:
   263                           	opt callstack 0
   264                           
   265 ;; *************** function _adc_init *****************
   266 ;; Defined at:
   267 ;;		line 19 in file "adc.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;		None
   270 ;; Auto vars:     Size  Location     Type
   271 ;;		None
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg, status,2
   276 ;; Tracked objects:
   277 ;;		On entry : 0/0
   278 ;;		On exit  : 0/0
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   281 ;;      Params:         0       0       0       0       0       0       0       0       0
   282 ;;      Locals:         0       0       0       0       0       0       0       0       0
   283 ;;      Temps:          0       0       0       0       0       0       0       0       0
   284 ;;      Totals:         0       0       0       0       0       0       0       0       0
   285 ;;Total ram usage:        0 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text2
   295  007F86                     __ptext2:
   296                           	opt callstack 0
   297  007F86                     _adc_init:
   298                           	opt callstack 30
   299                           
   300                           ;adc.c: 20:     ADCON1 = 0x0E;
   301                           
   302                           ;incstack = 0
   303  007F86  0E0E               	movlw	14
   304  007F88  6EC1               	movwf	4033,c	;volatile
   305                           
   306                           ;adc.c: 21:     CMCON = 0x07;
   307  007F8A  0E07               	movlw	7
   308  007F8C  6EB4               	movwf	4020,c	;volatile
   309                           
   310                           ;adc.c: 22:     ADCON2 = 0b10010100;
   311  007F8E  0E94               	movlw	148
   312  007F90  6EC0               	movwf	4032,c	;volatile
   313                           
   314                           ;adc.c: 23:     ADCON0 = 0x01;
   315  007F92  0E01               	movlw	1
   316  007F94  6EC2               	movwf	4034,c	;volatile
   317  007F96  0012               	return		;funcret
   318  007F98                     __end_of_adc_init:
   319                           	opt callstack 0
   320  0000                     
   321                           	psect	rparam
   322  0000                     tosu	equ	0xFFF
   323                           tosh	equ	0xFFE
   324                           tosl	equ	0xFFD
   325                           stkptr	equ	0xFFC
   326                           pclatu	equ	0xFFB
   327                           pclath	equ	0xFFA
   328                           pcl	equ	0xFF9
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           prodh	equ	0xFF4
   334                           prodl	equ	0xFF3
   335                           indf0	equ	0xFEF
   336                           postinc0	equ	0xFEE
   337                           postdec0	equ	0xFED
   338                           preinc0	equ	0xFEC
   339                           plusw0	equ	0xFEB
   340                           fsr0h	equ	0xFEA
   341                           fsr0l	equ	0xFE9
   342                           wreg	equ	0xFE8
   343                           indf1	equ	0xFE7
   344                           postinc1	equ	0xFE6
   345                           postdec1	equ	0xFE5
   346                           preinc1	equ	0xFE4
   347                           plusw1	equ	0xFE3
   348                           fsr1h	equ	0xFE2
   349                           fsr1l	equ	0xFE1
   350                           bsr	equ	0xFE0
   351                           indf2	equ	0xFDF
   352                           postinc2	equ	0xFDE
   353                           postdec2	equ	0xFDD
   354                           preinc2	equ	0xFDC
   355                           plusw2	equ	0xFDB
   356                           fsr2h	equ	0xFDA
   357                           fsr2l	equ	0xFD9
   358                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9       9
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_adc_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      91
                                              7 COMRAM     2     2      0
                           _adc_init
                           _adc_read
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             7     5      2      68
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      9       9       1        9.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 09 14:56:45 2019

                     l20 7FA6                       l41 7FFC       __CFG_FOSC$XTPLL_XT 000000  
                    l759 7FDA                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000            __CFG_DEBUG$ON 000000             __CFG_PWRT$ON 000000  
                   _main 7FCC                     start 1000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 0001                    _CMCON 000FB4  
                  status 000FD8          __initialization 7F80             __end_of_main 8000  
                 ??_main 0008            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3         __end_of_adc_init 7F98         __end_of_adc_read 7FCC  
             __accesstop 0060  __end_of__initialization 7F80            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_adc_init 0001                ?_adc_read 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F80  
                __ramtop 0800               ??_adc_init 0001               ??_adc_read 0003  
                __ptext0 7FCC                  __ptext1 7F98                  __ptext2 7F86  
   end_of_initialization 7F80                _TRISEbits 000F96      start_initialization 7F80  
      __size_of_adc_init 0012        __size_of_adc_read 0034            adc_read@canal 0005  
              adc_read@x 0006                adc_read@y 0007                 _LATEbits 000F8D  
             _ADCON0bits 000FC2                main@valor 0008                 __Hrparam 0000  
               __Lrparam 0000                 _adc_init 7F86                 _adc_read 7F98  
          __size_of_main 0034    __CFG_CPUDIV$OSC1_PLL2 000000  
